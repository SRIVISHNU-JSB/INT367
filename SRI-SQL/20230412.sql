/*
create table emp

(
age number,
salary number
)
;
insert into emp values (21,3000)
insert into emp values (22,4000)
insert into emp values (23,5000)
insert into emp values (23,6000)

select * from emp


DECLARE
--A NUMBER; --IMPLICIT DECLARATION
A EMP.AGE%TYPE; --EXPLICIT DECLARATION
--B NUMBER;
B EMP.SALARY%TYPE; --EXPLICIT DECLARATION

BEGIN
SELECT AGE,SALARY INTO A,B FROM EMP WHERE AGE=21;

DBMS_OUTPUT.PUT_LINE(A||' '||B);

END


--ROW_TYPE

DECLARE

    A EMP%ROWTYPE; --A CAN BE ANYTHING (LIKE RECD OR RECORDS) FOR THE NAME OF ROWTYPE VARIABLE


BEGIN
SELECT * INTO A FROM EMP WHERE AGE=21;

DBMS_OUTPUT.PUT_LINE(A.AGE||' '||A.SALARY);

END


--CONTROL STATEMENTS

DECLARE

    A EMP%ROWTYPE; --A CAN BE ANYTHING (LIKE RECD OR RECORDS) FOR THE NAME OF ROWTYPE VARIABLE
    C NUMBER;

BEGIN
C:=A.AGE+A.SALARY;
SELECT * INTO A FROM EMP WHERE AGE=21;

DBMS_OUTPUT.PUT_LINE(A.AGE||' '||A.SALARY||' '||C);

END

--CONDITIONAL STATEMENTS CONTROLS

DECLARE
A NUMBER:=4;
B NUMBER:=4;
BEGIN
IF A>B THEN
DBMS_OUTPUT.PUT_LINE('A IS GREATER THAN B');
ELSE IF A=B THEN
DBMS_OUTPUT.PUT_LINE('A IS EQUAL TO B');
ELSE
DBMS_OUTPUT.PUT_LINE('B IS GREATER THAN A');
END IF;
END IF;
END

*/

DECLARE
A NUMBER:=4;
B NUMBER:=5;
BEGIN
IF A>B THEN
DBMS_OUTPUT.PUT_LINE('A IS GREATER THAN B');
ELSIF A=B THEN
DBMS_OUTPUT.PUT_LINE('A IS EQUAL TO B');
ELSIF A<B THEN
DBMS_OUTPUT.PUT_LINE('A IS LESS THAN B');
END IF;
END


